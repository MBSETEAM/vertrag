/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.generator;

import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.xtext.example.mydsl.vertrag.Vertrag;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class VertragGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    fsa.generateFile("Vertrag.java", this.vertrag());
  }
  
  public CharSequence vertrag() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("public class Vertrag {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("int minlaufzeit=0;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("int datenvolumen=0;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("float preis= .0f;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("String netzanbieter = \"egal\";");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("//String seite;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("boolean tele_flat = true;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("int freiminuten = 0;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("boolean sms_flat = true;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("float sms_preis = .0f;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("String name;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("//Handy device = NULL;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public Vertrag(String n){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("name = n;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("//TODO Setter vlt auch generisch erzeugen lassen?");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setLaufzeit(int x){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("minlaufzeit = x;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setVolume(int x){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("datenvolumen = x;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setPrice(float p){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("preis = p;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setProvider(String p){");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("netzanbieter = p;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setTeleFlat(boolean x){");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("tele_flat = x;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setFreemin(int f){");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("freiminuten = f;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setSmsFlat(boolean x){");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("sms_flat = x;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setSmsPrice(int f){");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("sms_preis = f;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    return _builder;
  }
  
  public CharSequence compile(final Vertrag v) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("import java.io.FileNotFoundException;");
    _builder.newLine();
    _builder.append("import java.io.PrintWriter;");
    _builder.newLine();
    _builder.append("import java.io.UnsupportedEncodingException;");
    _builder.newLine();
    _builder.append("import java.util.ArrayList;");
    _builder.newLine();
    _builder.append("import java.util.List;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.apache.http.impl.conn.Wire;");
    _builder.newLine();
    _builder.append("import org.openqa.selenium.By;");
    _builder.newLine();
    _builder.append("import org.openqa.selenium.By.ById;");
    _builder.newLine();
    _builder.append("import org.openqa.selenium.JavascriptExecutor;");
    _builder.newLine();
    _builder.append("import org.openqa.selenium.WebDriver;");
    _builder.newLine();
    _builder.append("import org.openqa.selenium.WebElement;");
    _builder.newLine();
    _builder.append("import org.openqa.selenium.chrome.ChromeDriver;");
    _builder.newLine();
    _builder.append("import org.openqa.selenium.support.ui.ExpectedCondition;");
    _builder.newLine();
    _builder.append("import org.openqa.selenium.support.ui.WebDriverWait;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class Main {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static void loadPage() throws InterruptedException {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("jse = (JavascriptExecutor) driver;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("for (int i = 0; i < 2; i++) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("Thread.sleep(100);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("jse.executeScript(\"window.scrollBy(0,8000)\", \"\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static WebDriver driver;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static JavascriptExecutor jse;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static int counter = 0;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static String netz = \"99\";");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static String Vodafone_netz = \"Vodafone\"; //1");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static String o2_netz = \"O2\"; //3");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static String Telekom_netz = \"Telekom\"; //4");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static void main(String[] args) throws InterruptedException, FileNotFoundException, UnsupportedEncodingException {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("System.setProperty(\"webdriver.chrome.driver\", \"/home/toghrul/Downloads/chromedriver\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("PrintWriter writer = new PrintWriter(\"the-file-name.txt\", \"UTF-8\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("driver = new ChromeDriver();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("driver.get(\"https://www.check24.de/handytarife/anbieter/\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("WebElement container = driver.findElement(By.id(\"c24-provider-container\"));");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("List<WebElement> l = container.findElements(By.xpath(\"*\"));");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("List<String> Anbieter = new ArrayList();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("writer.println(\"Anzah der Anbieter\" + l.size());");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("int i = 0;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("for(WebElement x : l) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("WebElement a = x.findElement(By.xpath(\"div[1]/a\"));");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("Anbieter.add(a.getAttribute(\"href\"));");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("for(String link : Anbieter) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("driver.get(link);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("Thread.sleep(1000);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("driver.findElement(By.xpath(\"/html/body/div[2]/div[3]/div/div/div/div/ul/li[1]\")).click();");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("}catch (Exception e) {");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("continue;");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("loadPage();");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("int size = driver.findElements(By.tagName(\"hardware-select-item\")).size();");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("for(int c=0;c<size;c++) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("List <WebElement> handyyy = driver.findElements(By.tagName(\"hardware-select-item\"));");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("String handyName = \"\";");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("handyName = handyyy.get(c).findElement(By.tagName(\"h3\")).getAttribute(\"outerHTML\").replaceAll(\"<h3 class=\\\"headline ng-binding\\\">\", \"\").replaceAll(\"</h3>\", \"\").replaceAll(\"<br>\", \" \");");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("}catch (Exception e) {");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("handyyy.get(c).click();");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("loadPage();");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("Thread.sleep(1000);");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("List <WebElement> divClassProvider = driver.findElements(By.tagName(\"product-item\"));");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("writer.println(\"Anzahl Verträge: \"+divClassProvider.size());");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("for(WebElement x : divClassProvider){");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("counter = counter + 1;");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("if(counter == 10) {");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("driver.quit();");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("writer.close();");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("return;");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("System.out.println(counter);");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("writer.println(\"ID: \" + counter);");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("WebElement provider = x.findElement(By.className(\"provider\"));");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("WebElement network = x.findElement(By.className(\"info-column\"));");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("writer.println(\"Anbieter: \" + provider.findElement(By.xpath(\".//img\")).getAttribute(\"title\"));");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("netz = network.findElement(By.xpath(\".//span\")).getAttribute(\"data-network-logo\");");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("if (netz.equals(\"1\")) writer.println(\"Netz: \" +Vodafone_netz);\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("if (netz.equals(\"2\")) writer.println(\"- kein Netz definiert -\");\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("if (netz.equals(\"3\")) writer.println(\"Netz: \" +o2_netz);\t");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("if (netz.equals(\"4\")) writer.println(\"Netz: \" +Telekom_netz);");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("if (netz.equals(\"99\")) writer.println(\"- kein Netz eingetragen -\");");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("writer.println(\"Name: \" + provider.findElement(By.xpath(\".//div[contains(@class, \'provider-name\')]\")).getText());");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("writer.println(\"Laufzeit: \" + provider.findElement(By.xpath(\".//div[contains(@class, \'contract-period\')]\")).getText());");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("//writer.println(\"Handy: \" + x.findElement(By.xpath(\".//span[contains(@class, \'name\')]\")).getText());");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("//writer.println(\"Handy: \" + handyName);");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("String datavolume = x.findElement(By.xpath(\".//div[contains(@class, \'traffic\')]\")).getText();");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("String datavolumes[] = datavolume.split(\"\\\\r?\\\\n\");");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("String volumen = datavolumes[0]; // 25 GB");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("String speed = datavolumes[1]; // 300mb/sek");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("writer.println(\"Datenvolumen: \" + volumen);");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("writer.println(\"Geschwindigkeit: \" + speed);");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("//String handyName = x.findElement(By.className(\"name open-subvariations ng-binding ng-scope\")).getText();");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("writer.println(\"Handy: \" + handyName);");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("String benefit_voice = x.findElement(By.xpath(\".//div[contains(@class, \'voice\')]\")).getText().replaceAll(\"[\\r\\n]+\", \" \");");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("if( benefit_voice.equals(\"Telefon- Flat\")) writer.println(\"Telefon- Flat: true\");");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("else writer.println(\"Telefon- Flat: \" + benefit_voice);");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("String benefit_sms = x.findElement(By.xpath(\".//div[contains(@class, \'sms\')]\")).getText().replaceAll(\"[\\r\\n]+\", \" \");");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("if( benefit_sms.equals(\"SMS- Flat\")) writer.println(\"SMS- Flat: true\");");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("else writer.println(\"SMS- Flat: \" + benefit_sms);");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("}catch (Exception e) {");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("String regex = \"test\";");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("String preis = x.findElement(By.xpath(\".//div[contains(@class, \'price\')]\")).getText().split(\"\\\\€\", 2)[0].replaceAll(\"[\\r\\n]+\", \" \");");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("if (preis.contains(\"Durchschnitt pro Monat\")) regex = \"\\\\s*\\\\bDurchschnitt pro Monat\\\\b\\\\s*\";");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("else regex = \"\\\\s*\\\\bDurchsch. pro Monat\\\\b\\\\s*\";");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("preis = preis.replaceAll(regex, \"\");");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("writer.println(\"Preis: \"+ preis);");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("writer.println(\"----------------\");");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("}catch(Exception e) {}");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("driver.get(link);");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("driver.findElement(By.xpath(\"/html/body/div[2]/div[3]/div/div/div/div/ul/li[1]\")).click();");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("}catch (Exception e) {");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("continue;");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("loadPage();");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}catch (Exception e) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("for(String link : Anbieter) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("driver.get(link);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("//wait(driver);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("Thread.sleep(1000);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("driver.findElement(By.xpath(\"/html/body/div[2]/div[3]/div/div/div/div/ul/li[2]\")).click();");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}catch (Exception e) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("continue;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("Thread.sleep(1000);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("loadPage();");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("List <WebElement> divClassProvider = driver.findElements(By.tagName(\"product-item\"));");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("writer.println(\"Anzahl Verträge: \"+divClassProvider.size());");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("// Durchlaufe alle Listenelemente");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("for(WebElement x : divClassProvider){");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("counter = counter + 1;");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("System.out.println(counter);");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("writer.println(\"ID: \" + counter);");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("WebElement provider = x.findElement(By.className(\"provider\"));");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("WebElement network = x.findElement(By.className(\"info-column\"));");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("writer.println(\"Anbieter: \" + provider.findElement(By.xpath(\".//img\")).getAttribute(\"title\"));");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("netz = network.findElement(By.xpath(\".//span\")).getAttribute(\"data-network-logo\");");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("if (netz.equals(\"1\")) writer.println(\"Netz: \" +Vodafone_netz);\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("if (netz.equals(\"2\")) writer.println(\"- kein Netz definiert -\");\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("if (netz.equals(\"3\")) writer.println(\"Netz: \" +o2_netz);\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("if (netz.equals(\"4\")) writer.println(\"Netz: \" +Telekom_netz);");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("if (netz.equals(\"99\")) writer.println(\"- kein Netz eingetragen -\");");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("writer.println(\"Name: \" + provider.findElement(By.xpath(\".//div[contains(@class, \'provider-name\')]\")).getText());");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("writer.println(\"Laufzeit: \" + provider.findElement(By.xpath(\".//div[contains(@class, \'contract-period\')]\")).getText());");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("//writer.println(\"Handy: \" + x.findElement(By.xpath(\".//span[contains(@class, \'name\')]\")).getText());");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("String datavolume = x.findElement(By.xpath(\".//div[contains(@class, \'traffic\')]\")).getText();");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("String datavolumes[] = datavolume.split(\"\\\\r?\\\\n\");");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("String volumen = datavolumes[0]; // 25 GB");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("String speed = datavolumes[1]; // 300mb/sek");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("writer.println(\"Datenvolumen: \" + volumen);");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("writer.println(\"Geschwindigkeit: \" + speed);");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("String benefit_voice = x.findElement(By.xpath(\".//div[contains(@class, \'voice\')]\")).getText().replaceAll(\"[\\r\\n]+\", \" \");");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("if( benefit_voice.equals(\"Telefon- Flat\")) writer.println(\"Telefon- Flat: true\");");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("else writer.println(\"Telefon- Flat: \" + benefit_voice);");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("String benefit_sms = x.findElement(By.xpath(\".//div[contains(@class, \'sms\')]\")).getText().replaceAll(\"[\\r\\n]+\", \" \");");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("if( benefit_sms.equals(\"SMS- Flat\")) writer.println(\"SMS- Flat: true\");");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("else writer.println(\"SMS- Flat: \" + benefit_sms);");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("}catch (Exception e) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("String regex = \"test\";");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("String preis = x.findElement(By.xpath(\".//div[contains(@class, \'price\')]\")).getText().split(\"\\\\€\", 2)[0].replaceAll(\"[\\r\\n]+\", \" \");");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("if (preis.contains(\"Durchschnitt pro Monat\")) regex = \"\\\\s*\\\\bDurchschnitt pro Monat\\\\b\\\\s*\";");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("else regex = \"\\\\s*\\\\bDurchsch. pro Monat\\\\b\\\\s*\";");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("preis = preis.replaceAll(regex, \"\");");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("writer.println(\"Preis: \"+ preis);");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("writer.println(\"----------------\");");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("writer.close();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
}
