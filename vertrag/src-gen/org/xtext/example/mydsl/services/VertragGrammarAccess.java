/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class VertragGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Vertrag.Model");
		private final Assignment cElementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementsElementParserRuleCall_0 = (RuleCall)cElementsAssignment.eContents().get(0);
		
		//// Modell Medell Medel
		//Model:
		//	elements+=Element*;
		@Override public ParserRule getRule() { return rule; }
		
		//elements+=Element*
		public Assignment getElementsAssignment() { return cElementsAssignment; }
		
		//Element
		public RuleCall getElementsElementParserRuleCall_0() { return cElementsElementParserRuleCall_0; }
	}
	public class ElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Vertrag.Element");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cVertragParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cHandyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Element:
		//	Vertrag | Handy;
		@Override public ParserRule getRule() { return rule; }
		
		//Vertrag | Handy
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Vertrag
		public RuleCall getVertragParserRuleCall_0() { return cVertragParserRuleCall_0; }
		
		//Handy
		public RuleCall getHandyParserRuleCall_1() { return cHandyParserRuleCall_1; }
	}
	public class VertragElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Vertrag.Vertrag");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cVertragKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameZEICHENFOLGETerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_0_3 = (Group)cGroup_0.eContents().get(3);
		private final Keyword cMindestvertragslaufzeitKeyword_0_3_0 = (Keyword)cGroup_0_3.eContents().get(0);
		private final Assignment cMindestvertragslaufzeitAssignment_0_3_1 = (Assignment)cGroup_0_3.eContents().get(1);
		private final RuleCall cMindestvertragslaufzeitINTTerminalRuleCall_0_3_1_0 = (RuleCall)cMindestvertragslaufzeitAssignment_0_3_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cDatenvolumenKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDatenvolumenAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDatenvolumenINTTerminalRuleCall_1_1_0 = (RuleCall)cDatenvolumenAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cMonatl_kostenKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cMonatl_kostenAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cMonatl_kostenPRICETerminalRuleCall_2_1_0 = (RuleCall)cMonatl_kostenAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cInternetseiteKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cInternetseiteAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cInternetseiteIDTerminalRuleCall_3_1_0 = (RuleCall)cInternetseiteAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cUnorderedGroup.eContents().get(4);
		private final Keyword cNetzanbieterKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueNetzanbieterEnumRuleCall_4_1_0 = (RuleCall)cValueAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cUnorderedGroup.eContents().get(5);
		private final Keyword cTelefonFlatKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTelefonflatAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTelefonflatIDTerminalRuleCall_5_1_0 = (RuleCall)cTelefonflatAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cUnorderedGroup.eContents().get(6);
		private final Keyword cSmsFlatKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSmsflatAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cSmsflatIDTerminalRuleCall_6_1_0 = (RuleCall)cSmsflatAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cUnorderedGroup.eContents().get(7);
		private final Keyword cGeraetKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cGeraetAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cGeraetHandyCrossReference_7_1_0 = (CrossReference)cGeraetAssignment_7_1.eContents().get(0);
		private final RuleCall cGeraetHandyIDTerminalRuleCall_7_1_0_1 = (RuleCall)cGeraetHandyCrossReference_7_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cUnorderedGroup.eContents().get(8);
		
		//Vertrag:
		//	'Vertrag' name=ZEICHENFOLGE '{' ('mindestvertragslaufzeit' mindestvertragslaufzeit=INT)* & ('datenvolumen'
		//	datenvolumen=INT)* & ('monatl_kosten' monatl_kosten=PRICE)* & ('internetseite' internetseite=ID)* & ('netzanbieter'
		//	value=Netzanbieter)* & ('telefon-flat' telefonflat=ID)* & ('sms-flat' smsflat=ID)* & ('geraet' geraet=[Handy])* &
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Vertrag' name=ZEICHENFOLGE '{' ('mindestvertragslaufzeit' mindestvertragslaufzeit=INT)* & ('datenvolumen'
		//datenvolumen=INT)* & ('monatl_kosten' monatl_kosten=PRICE)* & ('internetseite' internetseite=ID)* & ('netzanbieter'
		//value=Netzanbieter)* & ('telefon-flat' telefonflat=ID)* & ('sms-flat' smsflat=ID)* & ('geraet' geraet=[Handy])* & '}'
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//'Vertrag' name=ZEICHENFOLGE '{' ('mindestvertragslaufzeit' mindestvertragslaufzeit=INT)*
		public Group getGroup_0() { return cGroup_0; }
		
		//'Vertrag'
		public Keyword getVertragKeyword_0_0() { return cVertragKeyword_0_0; }
		
		//name=ZEICHENFOLGE
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }
		
		//ZEICHENFOLGE
		public RuleCall getNameZEICHENFOLGETerminalRuleCall_0_1_0() { return cNameZEICHENFOLGETerminalRuleCall_0_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0_2() { return cLeftCurlyBracketKeyword_0_2; }
		
		//('mindestvertragslaufzeit' mindestvertragslaufzeit=INT)*
		public Group getGroup_0_3() { return cGroup_0_3; }
		
		//'mindestvertragslaufzeit'
		public Keyword getMindestvertragslaufzeitKeyword_0_3_0() { return cMindestvertragslaufzeitKeyword_0_3_0; }
		
		//mindestvertragslaufzeit=INT
		public Assignment getMindestvertragslaufzeitAssignment_0_3_1() { return cMindestvertragslaufzeitAssignment_0_3_1; }
		
		//INT
		public RuleCall getMindestvertragslaufzeitINTTerminalRuleCall_0_3_1_0() { return cMindestvertragslaufzeitINTTerminalRuleCall_0_3_1_0; }
		
		//('datenvolumen' datenvolumen=INT)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'datenvolumen'
		public Keyword getDatenvolumenKeyword_1_0() { return cDatenvolumenKeyword_1_0; }
		
		//datenvolumen=INT
		public Assignment getDatenvolumenAssignment_1_1() { return cDatenvolumenAssignment_1_1; }
		
		//INT
		public RuleCall getDatenvolumenINTTerminalRuleCall_1_1_0() { return cDatenvolumenINTTerminalRuleCall_1_1_0; }
		
		//('monatl_kosten' monatl_kosten=PRICE)*
		public Group getGroup_2() { return cGroup_2; }
		
		//'monatl_kosten'
		public Keyword getMonatl_kostenKeyword_2_0() { return cMonatl_kostenKeyword_2_0; }
		
		//monatl_kosten=PRICE
		public Assignment getMonatl_kostenAssignment_2_1() { return cMonatl_kostenAssignment_2_1; }
		
		//PRICE
		public RuleCall getMonatl_kostenPRICETerminalRuleCall_2_1_0() { return cMonatl_kostenPRICETerminalRuleCall_2_1_0; }
		
		//('internetseite' internetseite=ID)*
		public Group getGroup_3() { return cGroup_3; }
		
		//'internetseite'
		public Keyword getInternetseiteKeyword_3_0() { return cInternetseiteKeyword_3_0; }
		
		//internetseite=ID
		public Assignment getInternetseiteAssignment_3_1() { return cInternetseiteAssignment_3_1; }
		
		//ID
		public RuleCall getInternetseiteIDTerminalRuleCall_3_1_0() { return cInternetseiteIDTerminalRuleCall_3_1_0; }
		
		//('netzanbieter' value=Netzanbieter)*
		public Group getGroup_4() { return cGroup_4; }
		
		//'netzanbieter'
		public Keyword getNetzanbieterKeyword_4_0() { return cNetzanbieterKeyword_4_0; }
		
		//value=Netzanbieter
		public Assignment getValueAssignment_4_1() { return cValueAssignment_4_1; }
		
		//Netzanbieter
		public RuleCall getValueNetzanbieterEnumRuleCall_4_1_0() { return cValueNetzanbieterEnumRuleCall_4_1_0; }
		
		//('telefon-flat' telefonflat=ID)*
		public Group getGroup_5() { return cGroup_5; }
		
		//'telefon-flat'
		public Keyword getTelefonFlatKeyword_5_0() { return cTelefonFlatKeyword_5_0; }
		
		//telefonflat=ID
		public Assignment getTelefonflatAssignment_5_1() { return cTelefonflatAssignment_5_1; }
		
		//ID
		public RuleCall getTelefonflatIDTerminalRuleCall_5_1_0() { return cTelefonflatIDTerminalRuleCall_5_1_0; }
		
		//('sms-flat' smsflat=ID)*
		public Group getGroup_6() { return cGroup_6; }
		
		//'sms-flat'
		public Keyword getSmsFlatKeyword_6_0() { return cSmsFlatKeyword_6_0; }
		
		//smsflat=ID
		public Assignment getSmsflatAssignment_6_1() { return cSmsflatAssignment_6_1; }
		
		//ID
		public RuleCall getSmsflatIDTerminalRuleCall_6_1_0() { return cSmsflatIDTerminalRuleCall_6_1_0; }
		
		//('geraet' geraet=[Handy])*
		public Group getGroup_7() { return cGroup_7; }
		
		//'geraet'
		public Keyword getGeraetKeyword_7_0() { return cGeraetKeyword_7_0; }
		
		//geraet=[Handy]
		public Assignment getGeraetAssignment_7_1() { return cGeraetAssignment_7_1; }
		
		//[Handy]
		public CrossReference getGeraetHandyCrossReference_7_1_0() { return cGeraetHandyCrossReference_7_1_0; }
		
		//ID
		public RuleCall getGeraetHandyIDTerminalRuleCall_7_1_0_1() { return cGeraetHandyIDTerminalRuleCall_7_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class HandyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Vertrag.Handy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHandyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSystemAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSystemBetriebssystemEnumRuleCall_3_0 = (RuleCall)cSystemAssignment_3.eContents().get(0);
		private final Assignment cMarkeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMarkeMarkeEnumRuleCall_4_0 = (RuleCall)cMarkeAssignment_4.eContents().get(0);
		private final Assignment cSpeicherAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSpeicherIDTerminalRuleCall_5_0 = (RuleCall)cSpeicherAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Handy:
		//	'handy' name=ID '{'
		//	system?=Betriebssystem
		//	marke?=Marke
		//	speicher?=ID
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'handy' name=ID '{' system?=Betriebssystem marke?=Marke speicher?=ID '}'
		public Group getGroup() { return cGroup; }
		
		//'handy'
		public Keyword getHandyKeyword_0() { return cHandyKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//system?=Betriebssystem
		public Assignment getSystemAssignment_3() { return cSystemAssignment_3; }
		
		//Betriebssystem
		public RuleCall getSystemBetriebssystemEnumRuleCall_3_0() { return cSystemBetriebssystemEnumRuleCall_3_0; }
		
		//marke?=Marke
		public Assignment getMarkeAssignment_4() { return cMarkeAssignment_4; }
		
		//Marke
		public RuleCall getMarkeMarkeEnumRuleCall_4_0() { return cMarkeMarkeEnumRuleCall_4_0; }
		
		//speicher?=ID
		public Assignment getSpeicherAssignment_5() { return cSpeicherAssignment_5; }
		
		//ID
		public RuleCall getSpeicherIDTerminalRuleCall_5_0() { return cSpeicherIDTerminalRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	
	public class NetzanbieterElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Vertrag.Netzanbieter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cO2EnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cO2O2Keyword_0_0 = (Keyword)cO2EnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTELEKOMEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTELEKOMTELEKOMKeyword_1_0 = (Keyword)cTELEKOMEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cVODAFONEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cVODAFONVODAFONKeyword_2_0 = (Keyword)cVODAFONEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Netzanbieter:
		//	O2 | TELEKOM | VODAFON;
		public EnumRule getRule() { return rule; }
		
		//O2 | TELEKOM | VODAFON
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//O2
		public EnumLiteralDeclaration getO2EnumLiteralDeclaration_0() { return cO2EnumLiteralDeclaration_0; }
		
		//"O2"
		public Keyword getO2O2Keyword_0_0() { return cO2O2Keyword_0_0; }
		
		//TELEKOM
		public EnumLiteralDeclaration getTELEKOMEnumLiteralDeclaration_1() { return cTELEKOMEnumLiteralDeclaration_1; }
		
		//"TELEKOM"
		public Keyword getTELEKOMTELEKOMKeyword_1_0() { return cTELEKOMTELEKOMKeyword_1_0; }
		
		//VODAFON
		public EnumLiteralDeclaration getVODAFONEnumLiteralDeclaration_2() { return cVODAFONEnumLiteralDeclaration_2; }
		
		//"VODAFON"
		public Keyword getVODAFONVODAFONKeyword_2_0() { return cVODAFONVODAFONKeyword_2_0; }
	}
	public class BetriebssystemElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Vertrag.Betriebssystem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cANDROIDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cANDROIDANDROIDKeyword_0_0 = (Keyword)cANDROIDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cIOSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cIOSIOSKeyword_1_0 = (Keyword)cIOSEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Betriebssystem:
		//	ANDROID | IOS;
		public EnumRule getRule() { return rule; }
		
		//ANDROID | IOS
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ANDROID
		public EnumLiteralDeclaration getANDROIDEnumLiteralDeclaration_0() { return cANDROIDEnumLiteralDeclaration_0; }
		
		//"ANDROID"
		public Keyword getANDROIDANDROIDKeyword_0_0() { return cANDROIDANDROIDKeyword_0_0; }
		
		//IOS
		public EnumLiteralDeclaration getIOSEnumLiteralDeclaration_1() { return cIOSEnumLiteralDeclaration_1; }
		
		//"IOS"
		public Keyword getIOSIOSKeyword_1_0() { return cIOSIOSKeyword_1_0; }
	}
	public class MarkeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Vertrag.Marke");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSAMSUNGEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSAMSUNGSAMSUNGKeyword_0_0 = (Keyword)cSAMSUNGEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cIPHONEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cIPHONEIPHONEKeyword_1_0 = (Keyword)cIPHONEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Marke:
		//	SAMSUNG | IPHONE;
		public EnumRule getRule() { return rule; }
		
		//SAMSUNG | IPHONE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SAMSUNG
		public EnumLiteralDeclaration getSAMSUNGEnumLiteralDeclaration_0() { return cSAMSUNGEnumLiteralDeclaration_0; }
		
		//"SAMSUNG"
		public Keyword getSAMSUNGSAMSUNGKeyword_0_0() { return cSAMSUNGSAMSUNGKeyword_0_0; }
		
		//IPHONE
		public EnumLiteralDeclaration getIPHONEEnumLiteralDeclaration_1() { return cIPHONEEnumLiteralDeclaration_1; }
		
		//"IPHONE"
		public Keyword getIPHONEIPHONEKeyword_1_0() { return cIPHONEIPHONEKeyword_1_0; }
	}
	
	private final ModelElements pModel;
	private final TerminalRule tZEICHENFOLGE;
	private final TerminalRule tINT;
	private final TerminalRule tPRICE;
	private final TerminalRule tID;
	private final ElementElements pElement;
	private final NetzanbieterElements eNetzanbieter;
	private final BetriebssystemElements eBetriebssystem;
	private final MarkeElements eMarke;
	private final VertragElements pVertrag;
	private final HandyElements pHandy;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public VertragGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.tZEICHENFOLGE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Vertrag.ZEICHENFOLGE");
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Vertrag.INT");
		this.tPRICE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Vertrag.PRICE");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Vertrag.ID");
		this.pElement = new ElementElements();
		this.eNetzanbieter = new NetzanbieterElements();
		this.eBetriebssystem = new BetriebssystemElements();
		this.eMarke = new MarkeElements();
		this.pVertrag = new VertragElements();
		this.pHandy = new HandyElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.Vertrag".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//// Modell Medell Medel
	//Model:
	//	elements+=Element*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//terminal ZEICHENFOLGE:
	//	'0'..'9' | 'a'..'z' | 'A'..'Z'+;
	public TerminalRule getZEICHENFOLGERule() {
		return tZEICHENFOLGE;
	}
	
	//@ Override terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//terminal PRICE:
	//	'0'..'9'+ ',' '0'..'9' '0'..'9';
	public TerminalRule getPRICERule() {
		return tPRICE;
	}
	
	//@ Override terminal ID:
	//	'0'..'9' | 'a'..'z' | 'A'..'Z'+;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//Element:
	//	Vertrag | Handy;
	public ElementElements getElementAccess() {
		return pElement;
	}
	
	public ParserRule getElementRule() {
		return getElementAccess().getRule();
	}
	
	//enum Netzanbieter:
	//	O2 | TELEKOM | VODAFON;
	public NetzanbieterElements getNetzanbieterAccess() {
		return eNetzanbieter;
	}
	
	public EnumRule getNetzanbieterRule() {
		return getNetzanbieterAccess().getRule();
	}
	
	//enum Betriebssystem:
	//	ANDROID | IOS;
	public BetriebssystemElements getBetriebssystemAccess() {
		return eBetriebssystem;
	}
	
	public EnumRule getBetriebssystemRule() {
		return getBetriebssystemAccess().getRule();
	}
	
	//enum Marke:
	//	SAMSUNG | IPHONE;
	public MarkeElements getMarkeAccess() {
		return eMarke;
	}
	
	public EnumRule getMarkeRule() {
		return getMarkeAccess().getRule();
	}
	
	//Vertrag:
	//	'Vertrag' name=ZEICHENFOLGE '{' ('mindestvertragslaufzeit' mindestvertragslaufzeit=INT)* & ('datenvolumen'
	//	datenvolumen=INT)* & ('monatl_kosten' monatl_kosten=PRICE)* & ('internetseite' internetseite=ID)* & ('netzanbieter'
	//	value=Netzanbieter)* & ('telefon-flat' telefonflat=ID)* & ('sms-flat' smsflat=ID)* & ('geraet' geraet=[Handy])* &
	//	'}';
	public VertragElements getVertragAccess() {
		return pVertrag;
	}
	
	public ParserRule getVertragRule() {
		return getVertragAccess().getRule();
	}
	
	//Handy:
	//	'handy' name=ID '{'
	//	system?=Betriebssystem
	//	marke?=Marke
	//	speicher?=ID
	//	'}';
	public HandyElements getHandyAccess() {
		return pHandy;
	}
	
	public ParserRule getHandyRule() {
		return getHandyAccess().getRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
