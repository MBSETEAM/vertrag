/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.vertrag.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.vertrag.Handy;
import org.xtext.example.mydsl.vertrag.VertragPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Handy</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.vertrag.impl.HandyImpl#getSystem <em>System</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.vertrag.impl.HandyImpl#getMarke <em>Marke</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.vertrag.impl.HandyImpl#getSpeicher <em>Speicher</em>}</li>
 * </ul>
 *
 * @generated
 */
public class HandyImpl extends ElementImpl implements Handy
{
  /**
   * The default value of the '{@link #getSystem() <em>System</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSystem()
   * @generated
   * @ordered
   */
  protected static final String SYSTEM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSystem() <em>System</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSystem()
   * @generated
   * @ordered
   */
  protected String system = SYSTEM_EDEFAULT;

  /**
   * The default value of the '{@link #getMarke() <em>Marke</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMarke()
   * @generated
   * @ordered
   */
  protected static final String MARKE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMarke() <em>Marke</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMarke()
   * @generated
   * @ordered
   */
  protected String marke = MARKE_EDEFAULT;

  /**
   * The default value of the '{@link #getSpeicher() <em>Speicher</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpeicher()
   * @generated
   * @ordered
   */
  protected static final int SPEICHER_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getSpeicher() <em>Speicher</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpeicher()
   * @generated
   * @ordered
   */
  protected int speicher = SPEICHER_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HandyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return VertragPackage.Literals.HANDY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSystem()
  {
    return system;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSystem(String newSystem)
  {
    String oldSystem = system;
    system = newSystem;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VertragPackage.HANDY__SYSTEM, oldSystem, system));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMarke()
  {
    return marke;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMarke(String newMarke)
  {
    String oldMarke = marke;
    marke = newMarke;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VertragPackage.HANDY__MARKE, oldMarke, marke));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getSpeicher()
  {
    return speicher;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSpeicher(int newSpeicher)
  {
    int oldSpeicher = speicher;
    speicher = newSpeicher;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VertragPackage.HANDY__SPEICHER, oldSpeicher, speicher));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case VertragPackage.HANDY__SYSTEM:
        return getSystem();
      case VertragPackage.HANDY__MARKE:
        return getMarke();
      case VertragPackage.HANDY__SPEICHER:
        return getSpeicher();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case VertragPackage.HANDY__SYSTEM:
        setSystem((String)newValue);
        return;
      case VertragPackage.HANDY__MARKE:
        setMarke((String)newValue);
        return;
      case VertragPackage.HANDY__SPEICHER:
        setSpeicher((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case VertragPackage.HANDY__SYSTEM:
        setSystem(SYSTEM_EDEFAULT);
        return;
      case VertragPackage.HANDY__MARKE:
        setMarke(MARKE_EDEFAULT);
        return;
      case VertragPackage.HANDY__SPEICHER:
        setSpeicher(SPEICHER_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case VertragPackage.HANDY__SYSTEM:
        return SYSTEM_EDEFAULT == null ? system != null : !SYSTEM_EDEFAULT.equals(system);
      case VertragPackage.HANDY__MARKE:
        return MARKE_EDEFAULT == null ? marke != null : !MARKE_EDEFAULT.equals(marke);
      case VertragPackage.HANDY__SPEICHER:
        return speicher != SPEICHER_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (system: ");
    result.append(system);
    result.append(", marke: ");
    result.append(marke);
    result.append(", speicher: ");
    result.append(speicher);
    result.append(')');
    return result.toString();
  }

} //HandyImpl
