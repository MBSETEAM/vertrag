/*
 * generated by Xtext 2.12.0
 */
grammar InternalVertrag;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.VertragGrammarAccess;

}

@parser::members {

 	private VertragGrammarAccess grammarAccess;

    public InternalVertragParser(TokenStream input, VertragGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected VertragGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getElementsElementParserRuleCall_0());
			}
			lv_elements_0_0=ruleElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"org.xtext.example.mydsl.Vertrag.Element");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getVertragParserRuleCall_0());
		}
		this_Vertrag_0=ruleVertrag
		{
			$current = $this_Vertrag_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getHandyParserRuleCall_1());
		}
		this_Handy_1=ruleHandy
		{
			$current = $this_Handy_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleVertrag
entryRuleVertrag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVertragRule()); }
	iv_ruleVertrag=ruleVertrag
	{ $current=$iv_ruleVertrag.current; }
	EOF;

// Rule Vertrag
ruleVertrag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{ 
			  getUnorderedGroupHelper().enter(grammarAccess.getVertragAccess().getUnorderedGroup());
			}
			(
				(
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getVertragAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getVertragAccess().getUnorderedGroup(), 0);
				}
							({true}?=>(otherlv_1='Vertrag'
							{
								newLeafNode(otherlv_1, grammarAccess.getVertragAccess().getVertragKeyword_0_0());
							}
							(
								(
									lv_name_2_0=RULE_ID
									{
										newLeafNode(lv_name_2_0, grammarAccess.getVertragAccess().getNameIDTerminalRuleCall_0_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getVertragRule());
										}
										setWithLastConsumed(
											$current,
											"name",
											lv_name_2_0,
											"org.xtext.example.mydsl.Vertrag.ID");
									}
								)
							)
							otherlv_3='{'
							{
								newLeafNode(otherlv_3, grammarAccess.getVertragAccess().getLeftCurlyBracketKeyword_0_2());
							}
							(
								otherlv_4='mindestvertragslaufzeit'
								{
									newLeafNode(otherlv_4, grammarAccess.getVertragAccess().getMindestvertragslaufzeitKeyword_0_3_0());
								}
								(
									(
										lv_mindestvertragslaufzeit_5_0=RULE_INT
										{
											newLeafNode(lv_mindestvertragslaufzeit_5_0, grammarAccess.getVertragAccess().getMindestvertragslaufzeitINTTerminalRuleCall_0_3_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getVertragRule());
											}
											setWithLastConsumed(
												$current,
												"mindestvertragslaufzeit",
												lv_mindestvertragslaufzeit_5_0,
												"org.xtext.example.mydsl.Vertrag.INT");
										}
									)
								)
							)*
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVertragAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getVertragAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getVertragAccess().getUnorderedGroup(), 1);
				}
							({true}?=>(otherlv_6='datenvolumen'
							{
								newLeafNode(otherlv_6, grammarAccess.getVertragAccess().getDatenvolumenKeyword_1_0());
							}
							(
								(
									lv_datenvolumen_7_0=RULE_INT
									{
										newLeafNode(lv_datenvolumen_7_0, grammarAccess.getVertragAccess().getDatenvolumenINTTerminalRuleCall_1_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getVertragRule());
										}
										setWithLastConsumed(
											$current,
											"datenvolumen",
											lv_datenvolumen_7_0,
											"org.xtext.example.mydsl.Vertrag.INT");
									}
								)
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVertragAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getVertragAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getVertragAccess().getUnorderedGroup(), 2);
				}
							({true}?=>(otherlv_8='monatl_kosten'
							{
								newLeafNode(otherlv_8, grammarAccess.getVertragAccess().getMonatl_kostenKeyword_2_0());
							}
							(
								(
									lv_monatl_kosten_9_0=RULE_FLOAT
									{
										newLeafNode(lv_monatl_kosten_9_0, grammarAccess.getVertragAccess().getMonatl_kostenFLOATTerminalRuleCall_2_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getVertragRule());
										}
										setWithLastConsumed(
											$current,
											"monatl_kosten",
											lv_monatl_kosten_9_0,
											"org.xtext.example.mydsl.Vertrag.FLOAT");
									}
								)
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVertragAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getVertragAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getVertragAccess().getUnorderedGroup(), 3);
				}
							({true}?=>(otherlv_10='netzanbieter'
							{
								newLeafNode(otherlv_10, grammarAccess.getVertragAccess().getNetzanbieterKeyword_3_0());
							}
							(
								(
									lv_netzanbieter_11_0=RULE_ID
									{
										newLeafNode(lv_netzanbieter_11_0, grammarAccess.getVertragAccess().getNetzanbieterIDTerminalRuleCall_3_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getVertragRule());
										}
										setWithLastConsumed(
											$current,
											"netzanbieter",
											lv_netzanbieter_11_0,
											"org.xtext.example.mydsl.Vertrag.ID");
									}
								)
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVertragAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getVertragAccess().getUnorderedGroup(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getVertragAccess().getUnorderedGroup(), 4);
				}
							({true}?=>(otherlv_12='internetseite'
							{
								newLeafNode(otherlv_12, grammarAccess.getVertragAccess().getInternetseiteKeyword_4_0());
							}
							(
								(
									lv_internetseite_13_0=RULE_ID
									{
										newLeafNode(lv_internetseite_13_0, grammarAccess.getVertragAccess().getInternetseiteIDTerminalRuleCall_4_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getVertragRule());
										}
										setWithLastConsumed(
											$current,
											"internetseite",
											lv_internetseite_13_0,
											"org.xtext.example.mydsl.Vertrag.ID");
									}
								)
							)
							))+
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVertragAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getVertragAccess().getUnorderedGroup(), 5)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getVertragAccess().getUnorderedGroup(), 5);
				}
							({true}?=>(otherlv_14='}'
							{
								newLeafNode(otherlv_14, grammarAccess.getVertragAccess().getRightCurlyBracketKeyword_5());
							}
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVertragAccess().getUnorderedGroup());
				}
			)
		)
				)+
				{getUnorderedGroupHelper().canLeave(grammarAccess.getVertragAccess().getUnorderedGroup())}?
			)
		)
			{ 
			  getUnorderedGroupHelper().leave(grammarAccess.getVertragAccess().getUnorderedGroup());
			}
	)
;

// Entry rule entryRuleHandy
entryRuleHandy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHandyRule()); }
	iv_ruleHandy=ruleHandy
	{ $current=$iv_ruleHandy.current; }
	EOF;

// Rule Handy
ruleHandy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{ 
			  getUnorderedGroupHelper().enter(grammarAccess.getHandyAccess().getUnorderedGroup());
			}
			(
				(
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getHandyAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getHandyAccess().getUnorderedGroup(), 0);
				}
							({true}?=>(otherlv_1='handy'
							{
								newLeafNode(otherlv_1, grammarAccess.getHandyAccess().getHandyKeyword_0_0());
							}
							(
								(
									lv_name_2_0=RULE_ID
									{
										newLeafNode(lv_name_2_0, grammarAccess.getHandyAccess().getNameIDTerminalRuleCall_0_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getHandyRule());
										}
										setWithLastConsumed(
											$current,
											"name",
											lv_name_2_0,
											"org.xtext.example.mydsl.Vertrag.ID");
									}
								)
							)
							otherlv_3='{'
							{
								newLeafNode(otherlv_3, grammarAccess.getHandyAccess().getLeftCurlyBracketKeyword_0_2());
							}
							(
								otherlv_4='system'
								{
									newLeafNode(otherlv_4, grammarAccess.getHandyAccess().getSystemKeyword_0_3_0());
								}
								(
									(
										lv_system_5_0=RULE_ID
										{
											newLeafNode(lv_system_5_0, grammarAccess.getHandyAccess().getSystemIDTerminalRuleCall_0_3_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getHandyRule());
											}
											setWithLastConsumed(
												$current,
												"system",
												lv_system_5_0,
												"org.xtext.example.mydsl.Vertrag.ID");
										}
									)
								)
							)?
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getHandyAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getHandyAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getHandyAccess().getUnorderedGroup(), 1);
				}
							({true}?=>(otherlv_6='marke'
							{
								newLeafNode(otherlv_6, grammarAccess.getHandyAccess().getMarkeKeyword_1_0());
							}
							(
								(
									lv_marke_7_0=RULE_ID
									{
										newLeafNode(lv_marke_7_0, grammarAccess.getHandyAccess().getMarkeIDTerminalRuleCall_1_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getHandyRule());
										}
										setWithLastConsumed(
											$current,
											"marke",
											lv_marke_7_0,
											"org.xtext.example.mydsl.Vertrag.ID");
									}
								)
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getHandyAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getHandyAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getHandyAccess().getUnorderedGroup(), 2);
				}
							({true}?=>(otherlv_8='speicher'
							{
								newLeafNode(otherlv_8, grammarAccess.getHandyAccess().getSpeicherKeyword_2_0());
							}
							(
								(
									lv_speicher_9_0=RULE_INT
									{
										newLeafNode(lv_speicher_9_0, grammarAccess.getHandyAccess().getSpeicherINTTerminalRuleCall_2_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getHandyRule());
										}
										setWithLastConsumed(
											$current,
											"speicher",
											lv_speicher_9_0,
											"org.xtext.example.mydsl.Vertrag.INT");
									}
								)
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getHandyAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getHandyAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getHandyAccess().getUnorderedGroup(), 3);
				}
							({true}?=>(otherlv_10='}'
							{
								newLeafNode(otherlv_10, grammarAccess.getHandyAccess().getRightCurlyBracketKeyword_3());
							}
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getHandyAccess().getUnorderedGroup());
				}
			)
		)
				)+
				{getUnorderedGroupHelper().canLeave(grammarAccess.getHandyAccess().getUnorderedGroup())}?
			)
		)
			{ 
			  getUnorderedGroupHelper().leave(grammarAccess.getHandyAccess().getUnorderedGroup());
			}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_FLOAT : RULE_INT ('.' RULE_INT)?;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
