/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.validation

import org.eclipse.xtext.validation.Check
import org.xtext.example.mydsl.vertrag.Vertrag
import org.xtext.example.mydsl.vertrag.VertragPackage

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class VertragValidator extends AbstractVertragValidator {
	
//	public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					VertragPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}

	
	@Check
	def checkVertrag(Vertrag ver) {
		var datenvolumen = -12;
		try {
			datenvolumen = Integer.parseInt(ver.datenvolumen);
		}catch(Exception e){
			error("datenvolumen muss Integer sein", VertragPackage.Literals.VERTRAG__DATENVOLUMEN, "");
		}
		if(datenvolumen <= 0) {
			error("datenvolumen muss >=0 sein", VertragPackage.Literals.VERTRAG__DATENVOLUMEN, "");
		}
		
		var monatl_kosten = -12.0;
		try {
			monatl_kosten = Float.parseFloat(ver.monatl_kosten);
		}catch(Exception e){
			error("monatl_kosten muss Float sein", VertragPackage.Literals.VERTRAG__DATENVOLUMEN, "");
		}
		if(datenvolumen <= 0) {
			error("monatl_kosten muss >=0 sein", VertragPackage.Literals.VERTRAG__DATENVOLUMEN, "");
		}
	}
	
}
