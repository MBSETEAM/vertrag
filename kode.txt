public static ArrayList<Vertrag> sortingAlgorithm(ArrayList<Vertrag> contracts, Query query){
//				ArrayList<Vertrag> list = new ArrayList<Vertrag>();
				boolean tellflat = true;
				boolean smsflat = true;
				
			    int laufZeit=0;
			
				ArrayList<Vertrag> result=new ArrayList<Vertrag>();
				
				//TeleFlat
						if (query.tele_value.contentEquals("viel")) {
						
							tellflat=true;
							}
						else if (query.tele_value.contentEquals("wenig")) {
								tellflat=false;
							}else {
								query.tele_freem=0;
							}
																				
												
					//SmsFlat
						if (query.sms_value.equals("viel")) {
							
							smsflat=true;
							}
						else if (query.sms_value.contentEquals("wenig")) {
								smsflat=false;
							}else if(query.sms_value.contentEquals("egal")){
								query.sms_cost=0;
							}
						//Anbieter
                        if (query.net_value.equals("gut")) {
							
							query.net_provider="TELEKOM";
							}
						else if (query.net_value.equals("normal")) {
								query.net_provider="VODAFON";
							} 
                        
                    //Laufzeit
                       
                        if(query.flex_value.equals("kurz")) {
                        	laufZeit=6;
                        }else if (query.flex_value.equals("normal") || query.flex_value.equals("flexibel") ||query.flex_value.equals("egal")) {
                        	laufZeit=24;
							
						}
                    //datenvol    
                    if (query.int_value.equals("viel") || query.int_value.equals("egal")) {
                    	query.int_vol=100;
                    }else if(query.int_value.equals("wenig")) {
						query.int_vol=4;
					}
				
				for(Vertrag ver: contracts) {
					if( (ver.sms_flat==smsflat || ver.sms_preis>=query.sms_cost)
					   & ( ver.tele_flat==tellflat || ver.freiminuten>=query.tele_freem )	
					    & (ver.minlaufzeit>=query.months || ver.minlaufzeit<= laufZeit ) 
					      & (ver.netzanbieter.equals(query.net_provider) || ver.netzanbieter.equals(query.net_value))
					     &(ver.datenvolumen<=query.int_vol) 				      				
						
							)
								      
					{ 
									
												
						result.add(ver);
											
				}
				
			}
				
				Collections.sort(result,Vertrag.SortList);
				//TODO
				return result;
				}
			


------------------------------------------------------------------------------
'''import java.util.Comparator;
				public class Vertrag {
		int minlaufzeit=0;
		int datenvolumen=0;
		float preis= .0f;
		String netzanbieter = "egal";
		//String seite;
		boolean tele_flat = true;
		int freiminuten = 0;
		boolean sms_flat = true;
		float sms_preis = .0f;
		String name;
		//Handy device = NULL;
	
		public Vertrag(String n){
			name = n;
		}
		
		public void setDatenvolumen(int datenvolumen) {
			this.datenvolumen = datenvolumen;
		}
		public int getDatenvolumen() {
			return datenvolumen;
		}
		//TODO Setter vlt auch generisch erzeugen lassen?
		
		public void setLaufzeit(int x){
			minlaufzeit = x;
		}
		
		public void setVolume(int x){
			datenvolumen = x;
		}
		
		public void setPrice(float p){
			preis = p;
		}
		public float getPreis() {
			return preis;
		}
		
		public void setProvider(String p){
				netzanbieter = p;
		}
		
		public void setTeleFlat(boolean x){
				tele_flat = x;
		}
		
		public void setFreemin(int f){
				freiminuten = f;
		}
		
		public void setSmsFlat(boolean x){
				sms_flat = x;
		}
			
		public void setSmsPrice(int f){
				sms_preis = f;
		}
		
		
			 
		   
		   public static Comparator<Vertrag> SortList=new Comparator<Vertrag>() {
			
			@Override
			public int compare(Vertrag o1, Vertrag o2) {
				float p1=o1.getPreis();
				float p2=o2.getPreis();
				return (int) (p1-p2);
			}
		};
		
}'''